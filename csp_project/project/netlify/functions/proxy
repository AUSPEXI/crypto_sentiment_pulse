// .netlify/functions/proxy.js
const axios = require('axios');

exports.handler = async (event) => {
  const { api, endpoint, params } = event.queryStringParameters;

  if (!api || !endpoint) {
    return {
      statusCode: 400,
      body: JSON.stringify({ error: 'Missing api or endpoint parameter' }),
    };
  }

  let url, headers = { 'Accept': 'application/json' };
  const corsHeaders = {
    'Access-Control-Allow-Origin': '*',
    'Access-Control-Allow-Methods': 'GET,POST,OPTIONS',
    'Access-Control-Allow-Headers': 'Content-Type,Authorization',
  };

  try {
    if (api === 'newsapi') {
      url = `https://newsapi.org/v2/${endpoint}`;
      params.apiKey = process.env.NEWSAPI_API_KEY || 'missing';
    } else if (api === 'coinmetrics') {
      url = `https://community-api.coinmetrics.io/v4/${endpoint}`;
    } else if (api === 'reddit') {
      url = `https://www.reddit.com/r/cryptocurrency/.rss`;
      headers = {}; // Remove User-Agent to avoid restrictions
    } else {
      return {
        statusCode: 400,
        headers: corsHeaders,
        body: JSON.stringify({ error: 'Unsupported API' }),
      };
    }

    const response = await axios.get(url, { params, headers, timeout: 10000 });
    return {
      statusCode: 200,
      headers: corsHeaders,
      body: JSON.stringify(response.data),
    };
  } catch (error) {
    return {
      statusCode: error.response?.status || 500,
      headers: corsHeaders,
      body: JSON.stringify({ error: error.message, details: error.response?.data }),
    };
  }
};
